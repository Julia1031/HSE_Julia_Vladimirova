"""
2. Создайте функцию для генерации текста с адресом суда.
Функция должна по шаблону генерировать шапку для процессуальных документов с
реквизитами сторон для отправки.
Пример работы функции:
В арбитражный суд города Москвы
Адрес: 115225, г. Москва, ул. Б. Тульская, 17
Истец: Пупкин Василий Геннадьевич
ИНН 1236182357 ОГРНИП 218431927812733
Адрес: 123534, г. Москва, ул. Водников, 13
Ответчик: ООО “Кооператив Озеро”
ИНН 1231231231 ОГРН 123124129312941
Адрес: 123534, г. Москва, ул. Красивых молдавских партизан, 69
Номер дела А40-123456/2023
Функция должна принимать в качестве аргумента словарь с данными ответчика и
номером дела (ссылка на файл с данными).
● На основании номера дела из списка судов должен быть выбран корректный
суд для отправки. Данные по арбитражным судам есть в указанном выше
файле. Используйте код суда из дела.
● С помощью f-string создайте шаблон для заполнения.
● В качестве истца укажите свои данные.
● В данные по ответчику подставьте данные, переданные в функцию в качестве
аргумента.
● В конце шапки подставьте номер дела.
Функция должна возвращать готовую шапку в виде строки.
Создайте ещё одну функцию, которая принимает в себя список словарей с данными
ответчика. Используйте цикл for для генерации всех возможных вариантов этой шапки
с вызовом первой функции внутри тела цикла for и выводом данных, которые она
возвращает в консоль.
"""

import json


def load_courts_data(filepath):
    with open(filepath, 'r', encoding='utf-8') as file:
        return json.load(file)


def generate_header(courts, defendant_data, case_number):
    court_code = case_number.split('-')[0]
    court_info = courts.get(court_code, {"name": "Неизвестный суд", "address": "Неизвестный адрес"})

    plaintiff_name = "Пупкин Василий Геннадьевич"
    plaintiff_inn = "1236182357"
    plaintiff_ogrn = "218431927812733"
    plaintiff_address = "123534, г. Москва, ул. Водников, 13"

    header = (
        f"В {court_info['name']}\n"
        f"Адрес: {court_info['address']}\n"
        f"Истец: {plaintiff_name}\n"
        f"ИНН {plaintiff_inn} ОГРНИП {plaintiff_ogrn}\n"
        f"Адрес: {plaintiff_address}\n"
        f"Ответчик: {defendant_data['name']}\n"
        f"ИНН {defendant_data['inn']} ОГРН {defendant_data['ogrn']}\n"
        f"Адрес: {defendant_data['address']}\n"
        f"Номер дела {case_number}"
    )

    return header


def generate_all_headers(courts, defendants_list):
    for defendant in defendants_list:
        case_number = defendant['case_number']
        header = generate_header(courts, defendant, case_number)
        print(header)
        print("\n" + "=" * 40 + "\n")


if __name__ == "__main__":
    courts_data = load_courts_data('courts.json')

    defendants_list = [
        {
            "name": "ООО “Кооператив Озеро”",
            "inn": "1231231231",
            "ogrn": "123124129312941",
            "address": "123534, г. Москва, ул. Красивых молдавских партизан, 69",
            "case_number": "A40-123456/2023"
        },
        {
            "name": "ООО “Рога и Копыта”",
            "inn": "9876543210",
            "ogrn": "987654321098765",
            "address": "654321, г. Санкт-Петербург, ул. Невская, 42",
            "case_number": "A41-654321/2023"
        }
        # добавьте других ответчиков по необходимости
    ]

    generate_all_headers(courts_data, defendants_list)