"""
Задание
1. Сгенерируйте массив из целых чисел, содержащий 100 000 элементов, с
помощью функции randomint из модуля random.
2. Сгенерируйте с помощью функции range массив, содержащий словари со
следующей структурой:
{
“num_1”: randomint(1,1_000_000),
“num_2”: randomint(1,1_000_000)
}
Длина массива должна составлять 100 000 элементов.
3. Напишите функцию алгоритма сортировки пузырьком и с её помощью
отсортируйте первый массив.
4. Отсортируйте второй массив с помощью встроенного спиского метода .sort() и
лямбда-функции сначала по первому ключу, потом по второму
"""

import random

# Шаг 1: Генерация массива из 100 000 целых чисел
array1 = [random.randint(1, 1_000_000) for _ in range(100_000)]
print("Первый массив сгенерирован.")

# Шаг 2: Генерация массива из 100 000 словарей
array2 = [{"num_1": random.randint(1, 1_000_000), "num_2": random.randint(1, 1_000_000)} for _ in range(100_000)]
print("Второй массив сгенерирован.")


# Шаг 3: Функция алгоритма сортировки пузырьком
def bubble_sort(arr):
    """
    Сортировка массива алгоритмом пузырька.

    :param arr: Массив для сортировки.
    :return: Отсортированный массив.
    """
    n = len(arr)
    for i in range(n):
        for j in range(0, n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr


# Сортировка первого массива с помощью пузырьковой сортировки
sorted_array1 = bubble_sort(array1.copy())
print("Первый массив отсортирован с использованием пузырьковой сортировки.")

# Шаг 4: Сортировка второго массива с использованием встроенного метода sort() и лямбда-функции
array2.sort(key=lambda x: (x['num_1'], x['num_2']))
print("Второй массив отсортирован с использованием встроенного метода sort() и лямбда-функции.")